MUST USE `;` AT THE END OF EVERY LINE
Print in console use --> console.log("hello world") 
Var --> let "var name" = "the actual thing you want the var to be valued with"

re-assigning happens when :
    `let age = 11
    console.log(age)
    age = 54
    console.log(age)`
first `let age = 11` sets the word "age" as a varuable, so that you don't have to use `let` again.
for you to fix a var you use `const` instead of `let` therfore the var will have a fixed value and when changing it with `var = ` it will show an error.
there is a var tha is called `var` works like `let` but is'nt longer used, but you can find it in onled code

Number objects and numbers:

nubmer can == and === each other propely 
`
ley y = 500;
let x = 500;
let z = new Number(500);
let a = new Number(500);

x == z; // true
x === z; // false

x == y; // true
x ===y; // false

z == a; //false
z === a; //true
`

math works noramlly between number X number and object X number, BUT math doesn't math with object X object it will always be flase in case of ==

alert() in js is used to how the pop-up in the top of the page, myJS.js line 104

diffrence between `` and "" is that in `` (Backticks) you can use varuables within the string using ${var} unlike regural quotaions "" or '', nyJS.js line 108 & 109

\n within any quotaions to start a new line. while to just press enter and start a new line you need to use Backticks ``. lines 111:117

usining \ before anything within a string will force js to read it as strin. line 119:121

using Number() to turn string to num and use String() to a num to string. line 123:130

everything string methods (https://www.w3schools.com/js/js_string_methods.asp#mark_charat) & (https://www.w3schools.com/jsref/jsref_obj_string.asp)

Comaparing, equality, and strict equality (https://javascript.info/comparison). line 132:145

comments in js are 2 types single line with // or multi line with /* */ just like html.

String to Int myJS.js lines 153:155